version: '3.8'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: meetingapp-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Octapull123
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    networks:
      - meetingapp-network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P Octapull123 -Q 'SELECT 1' -C || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 20
      start_period: 60s

  rabbitmq:
    image: rabbitmq:3-management
    container_name: meetingapp-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - meetingapp-network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 5s
      retries: 5

  meetingapp-api:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: meetingapp-api
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - "7000:8080"
    depends_on:
      sqlserver:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    volumes:
      - meetingapp-uploads:/app/MeetingDocuments
      - meetingapp-api-wwwroot:/app/wwwroot
    networks:
      - meetingapp-network
    restart: unless-stopped

  meetingapp-frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    container_name: meetingapp-frontend
    ports:
      - "4200:80"
    depends_on:
      - meetingapp-api
    networks:
      - meetingapp-network
    restart: unless-stopped

volumes:
  sqlserver-data:
  rabbitmq-data:
  meetingapp-uploads:
  meetingapp-api-wwwroot:

networks:
  meetingapp-network:
    driver: bridge